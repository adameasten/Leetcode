ThreeSum

Given an integer array nums, return all unique
triplets which sum == 0;

Example:
Input: numbers = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]

Solution and takeaways:
Easy:
 Bruteforce.
 Sort the array. Then iterate over each element
 and try to find matching triplets with a sum
 equal to 0. This solution will run heavliy
 beacuse of a sort and triple loops to find 
 all triplets equal to 0;

Hard:
 Two pointer.
 Sort the array. Iterate over each element,
 but instead of multiple loops to handle each
 element in the array, use a simple two pointer
 solution for the remaning elements your
 searching through. Beacuse your iterating over
 each element and trying to find 2 matching 
 numbers that leads to sum == 0, we can use 
 the pointers to traverse the remainder of the
 array from left and from right. Inc/dec the right
 pointer depending on the result of the threesum to
 find a soultion. (We are asked to find all unique
 triplets which means that we can skip all duplicate
 values after we have found all triple solutions related
 to the first occurance of a duplicate)
